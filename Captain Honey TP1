from cmu_graphics import *

class Bee:

    def __init__(self, cx, cy):
        self.cx = cx
        self.cy = cy
        self.velox = 0
        self.veloy = 0

    def drawBee(self, app):
        drawOval(self.cx, self.cy, 50, 35, fill = "gold", border = None, opacity = 100)
        drawLine(self.cx, self.cy + 17.5, self.cx, self.cy - 17.5, fill = "black")
        drawLine(self.cx + 8, self.cy + 16.5, self.cx + 8, self.cy - 16.5, fill = "black")
        drawLine(self.cx - 8, self.cy + 16.5, self.cx - 8, self.cy - 16.5, fill = "black")
        drawLine(self.cx + 16, self.cy + 12.5, self.cx + 16, self.cy - 12.5, fill = "black")
        drawLine(self.cx - 16, self.cy + 12.5, self.cx - 16, self.cy - 12.5, fill = "black")
        drawCircle(self.cx - 20, self.cy, 2, fill = "black", align = "center")
        
    def mouseMove(self, mouseX, mouseY):
        x = mouseX - self.cx
        y = mouseY - self.cy
        self.cx += x/30
        self.cy += y/30
        d = distance(self.cx, mouseX, self.cy, mouseY)
        if d > 0:
            self.velox = (x/30)/d
            self.veloy = (y/30)/d
        self.cx += self.velox 
        self.cy += self.veloy 
        
        
    


def onAppStart(app):
    app.Bee = Bee(app.width/2, app.height/2)


def redrawAll(app):
    app.Bee.drawBee(app)

def onMouseMove(app, mouseX, mouseY):
    app.Bee.mouseMove(mouseX, mouseY)

def distance(x1, x2, y1, y2):
    return (((x2 - x1)**2)+((y2 - y1)**2))**0.5

def timerFired(app):
    app.Bee.mouseMove(app.mouseX,app.mouseY)

def main():
    runApp()

main()
